import { SvelteComponentTyped } from "svelte";
interface ApplicationContext<T extends PIXI.Application> {
    app: T;
}
export declare function getApp<T extends PIXI.Application>(): ApplicationContext<T>;
import * as PIXI from 'pixi.js';
declare class __sveltets_Render<T extends PIXI.Application> {
    props(): Partial<PIXI.IApplicationOptions> & {
        instance?: T | undefined;
        render?: "auto" | "demand" | undefined;
    };
    events(): {
        prerender: CustomEvent<any>;
        postrender: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        view: {
            slot: string;
        };
        default: {};
    };
}
export type ApplicationProps<T extends PIXI.Application> = ReturnType<__sveltets_Render<T>['props']>;
export type ApplicationEvents<T extends PIXI.Application> = ReturnType<__sveltets_Render<T>['events']>;
export type ApplicationSlots<T extends PIXI.Application> = ReturnType<__sveltets_Render<T>['slots']>;
export default class Application<T extends PIXI.Application> extends SvelteComponentTyped<ApplicationProps<T>, ApplicationEvents<T>, ApplicationSlots<T>> {
}
export {};
