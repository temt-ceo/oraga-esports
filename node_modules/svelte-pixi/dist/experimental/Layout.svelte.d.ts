import { SvelteComponentTyped } from "svelte";
import type * as PIXI from 'pixi.js';
declare class __sveltets_Render<T extends PIXI.Graphics> {
    props(): {
        accessible?: boolean | undefined;
        accessibleChildren?: boolean | undefined;
        accessibleHint?: string | undefined;
        accessiblePointerEvents?: PIXI.PointerEvents | undefined;
        accessibleTitle?: string | undefined;
        accessibleType?: string | undefined;
        alpha?: number | undefined;
        angle?: number | undefined;
        cacheAsBitmap?: boolean | undefined;
        cacheAsBitmapMultisample?: PIXI.MSAA_QUALITY | undefined;
        cacheAsBitmapResolution?: number | undefined;
        cullable?: boolean | undefined;
        cullArea?: PIXI.Rectangle | undefined;
        cursor?: string | undefined;
        filterArea?: PIXI.Rectangle | undefined;
        filters?: PIXI.Filter[] | null | undefined;
        height?: number | undefined;
        hitArea?: PIXI.IHitArea | null | undefined;
        eventMode?: PIXI.EventMode | undefined;
        interactive?: boolean | undefined;
        interactiveChildren?: boolean | undefined;
        isMask?: boolean | undefined;
        isSprite?: boolean | undefined;
        mask?: PIXI.Container<PIXI.DisplayObject> | PIXI.MaskData | null | undefined;
        name?: string | null | undefined;
        pivot?: import("../util/data-types").PointLike | undefined;
        position?: import("../util/data-types").PointLike | undefined;
        renderable?: boolean | undefined;
        rotation?: number | undefined;
        scale?: import("../util/data-types").PointLike | undefined;
        skew?: import("../util/data-types").PointLike | undefined;
        sortableChildren?: boolean | undefined;
        width?: number | undefined;
        transform?: PIXI.Transform | undefined;
        visible?: boolean | undefined;
        x?: number | undefined;
        y?: number | undefined;
        zIndex?: number | undefined;
        instance?: T | undefined;
        applyPropOnMount?: boolean | undefined;
    } & {
        /**
         * If global, it will layout the children according to the renderer bounds
         *
         * If local, it will layout the children according to the parent container
         * or its own bounds if set
         */
        bounds?: "global" | "local" | undefined;
        align?: "center" | {
            horizontal: "left" | "center" | "right";
            vertical: "center" | "top" | "bottom";
        } | undefined;
    };
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        default: {};
    };
}
export type LayoutProps<T extends PIXI.Graphics> = ReturnType<__sveltets_Render<T>['props']>;
export type LayoutEvents<T extends PIXI.Graphics> = ReturnType<__sveltets_Render<T>['events']>;
export type LayoutSlots<T extends PIXI.Graphics> = ReturnType<__sveltets_Render<T>['slots']>;
export default class Layout<T extends PIXI.Graphics> extends SvelteComponentTyped<LayoutProps<T>, LayoutEvents<T>, LayoutSlots<T>> {
}
export {};
